openapi: 3.0.3

info:
  title: PiTona
  description: API to interact with a Triumpth Daytona 675 motorcycle"s ECU over OBD-II
  contact:
    name: Tahar Meijs
    url: https://github.com/tntmeijs/pitona/issues
  license:
    name: MIT
    url: https://github.com/tntmeijs/pitona/blob/master/LICENSE.md
  version: 0.0.1

externalDocs:
  description: Project homepage
  url: https://github.com/tntmeijs/pitona

servers:
  - url: http://localhost
    description: development
  - url: http://192.168.4.1
    description: Raspberry Pi local IP address

tags:
  - name: System
    description: Raspberry Pi system information
  - name: Serial
    description: Serial port connection management

paths:
  /api/v1/system/status:
    get:
      tags:
        - System
      operationId: getSystemStatus
      description: Returns Raspberry Pi system information
      responses:
        200:
          description: System status information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInformationResponseV1"

  /api/v1/serial/ports:
    get:
      tags:
        - Serial
      operationId: getAllSerialPortNames
      description: Returns all serial port names found on the system
      responses:
        200:
          description: Serial ports
          content:
            application/json:
              schema:
                required:
                  - ports
                properties:
                  ports:
                    type: array
                    items:
                      type: string
                    example:
                      - "COM1"
                      - "COM2"
                      - "COM3"
                      - "COM4"
    post:
      tags:
        - Serial
      operationId: connectToSerialPortWithName
      description: Requests the system to open a connection to a serial port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - port
              properties:
                port:
                  type: string
                  example: "COM1"
      responses:
        200:
          description: Successfully connected to the specified serial port
        400:
          description: The requested serial port could not be found
        409:
          description: The requested serial port is already in use
    delete:
      tags:
        - Serial
      operationId: disconnectFromSerialPortWithName
      description: Requests the system to close a serial port's connection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - port
              properties:
                port:
                  type: string
                  example: "COM1"
      responses:
        200:
          description: Successfully disconnected from the specified serial port
        400:
          description: The requested serial port could not be found
        409:
          description: The requested serial port is already in use

components:
  schemas:
    SystemInformationResponseV1:
      title: System Information Response V1
      description: Raspberry Pi system information
      required:
        - cpuTemperature
        - timestamp
      properties:
        cpuTemperature:
          type: number
          format: double
          example: 24.08
        timestamp:
          type: integer
          format: int64
          example: 901984800
